<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3cc3648e-b6ec-4b87-94cc-9e4928e0b910" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/jpa.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/jpa.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api-gateway/api-gateway/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/api-gateway/api-gateway/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api-gateway/api-gateway/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/api-gateway/api-gateway/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/car-service/car-service/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/car-service/car-service/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/car-service/car-service/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/car-service/car-service/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/car-service/car-service/target/classes/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/car-service/car-service/target/classes/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/car-service/car-service/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/car-service/car-service/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/notification-service/notification-service/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/notification-service/notification-service/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/notification-service/notification-service/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/notification-service/notification-service/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/order-service/order-service/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/order-service/order-service/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/order-service/order-service/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/order-service/order-service/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/payment-service/payment-service/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/payment-service/payment-service/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/payment-service/payment-service/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/payment-service/payment-service/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service-registry/service-registry/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/service-registry/service-registry/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service-registry/service-registry/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/service-registry/service-registry/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/user-service/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/user-service/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/user-service/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/user-service/src/main/resources/application.properties" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;pranilswami&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/pranilswami/Car_App_Microservices.git&quot;,
    &quot;accountId&quot;: &quot;d870d76a-ea07-41ec-9bcd-f9f35a15de0b&quot;
  }
}</component>
  <component name="MavenRunner">
    <option name="skipTests" value="true" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2uuVHXcvUtyeIxRsu0oF9fLzUGc" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.docker-compose.yml.api-gateway: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.car-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.mysql-car: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.mysql-payment: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.mysql-user: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.notification-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.service-registry: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.user-service: Compose Deployment.executor": "Run",
    "Maven.api-gateway [spring-boot:build-image...].executor": "Run",
    "Maven.car-app [clean].executor": "Run",
    "Maven.car-app [compile].executor": "Run",
    "Maven.car-app [package].executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "initial",
    "ignore.virus.scanning.warn.message": "true",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "E:/CarApp/Microservices"
  }
}]]></component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn spring-boot:build-image -DskipTests -DdockerPassword=dckr_pat_7H4uewKqXfa1rb42sC8Z8arvw58" />
    </option>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yml.user-service: Compose Deployment">
    <configuration default="true" type="JetRunConfigurationType">
      <module name="payment-service" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <module name="payment-service" />
      <option name="filePath" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.mysql-car: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="mysql-car" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.mysql-payment: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="mysql-payment" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.mysql-user: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="mysql-user" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.notification-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="notification-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.user-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="user-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml.user-service: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.mysql-car: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.mysql-payment: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.notification-service: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.mysql-user: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3cc3648e-b6ec-4b87-94cc-9e4928e0b910" name="Changes" comment="" />
      <created>1743098359850</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1743098359850</updated>
    </task>
    <servers />
  </component>
</project>